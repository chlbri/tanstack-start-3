import{defaultTransformer as p,isPlainObject as m,isRedirect as v,isNotFound as _}from"@tanstack/react-router";import{H3Event as g,getRequestURL as q,getResponseStatus as N,getRequestWebStream as F,eventHandler as H}from"h3";import{AsyncLocalStorage as P}from"node:async_hooks";var I="Invariant failed";function R(e,t){if(!e)throw new Error(I)}function O(e={}){let t,r=!1;const i=n=>{if(t&&t!==n)throw new Error("Context conflict")};let c;if(e.asyncContext){const n=e.AsyncLocalStorage||globalThis.AsyncLocalStorage;n?c=new n:console.warn("[unctx] `AsyncLocalStorage` is not provided.")}const l=()=>{if(c){const n=c.getStore();if(n!==void 0)return n}return t};return{use:()=>{const n=l();if(n===void 0)throw new Error("Context is not available");return n},tryUse:()=>l(),set:(n,a)=>{a||i(n),t=n,r=!0},unset:()=>{t=void 0,r=!1},call:(n,a)=>{i(n),t=n;try{return c?c.run(n,a):a()}finally{r||(t=void 0)}},async callAsync(n,a){t=n;const f=()=>{t=n},d=()=>t===n?f:void 0;x.add(d);try{const u=c?c.run(n,a):a();return r||(t=void 0),await u}finally{x.delete(d)}}}}function U(e={}){const t={};return{get(r,i={}){return t[r]||(t[r]=O({...e,...i})),t[r]}}}const y=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof global<"u"?global:typeof window<"u"?window:{},b="__unctx__",W=y[b]||(y[b]=U()),j=(e,t={})=>W.get(e,t),S="__unctx_async_handlers__",x=y[S]||(y[S]=new Set);function $(e){let t;const r=E(e),i={duplex:"half",method:e.method,headers:e.headers};return e.node.req.body instanceof ArrayBuffer?new Request(r,{...i,body:e.node.req.body}):new Request(r,{...i,get body(){return t||(t=B(e),t)}})}function J(e){return e.web??={request:$(e),url:E(e)},e.web.request}function M(){return A()}const C=Symbol("$HTTPEvent");function D(e){return typeof e=="object"&&(e instanceof g||e?.[C]instanceof g||e?.__is_event__===!0)}function h(e){return function(...t){let r=t[0];if(D(r))t[0]=r instanceof g||r.__is_event__?r:r[C];else{if(!globalThis.app.config.server.experimental?.asyncContext)throw new Error("AsyncLocalStorage was not enabled. Use the `server.experimental.asyncContext: true` option in your app configuration to enable it. Or, pass the instance of HTTPEvent that you have as the first argument to the function.");if(r=M(),!r)throw new Error("No HTTPEvent found in AsyncLocalStorage. Make sure you are using the function within the server runtime.");t.unshift(r)}return e(...t)}}const E=h(q),K=h(N),B=h(F);function G(){return j("nitro-app",{asyncContext:!!globalThis.app.config.server.experimental?.asyncContext,AsyncLocalStorage:P})}function A(){return G().use().event}function z(e){return globalThis.MANIFEST[e]}const k=H(Q);async function Q(e){return V(J(e))}async function V(e,t){var r,i;const c=e.method,l=new URL(e.url,"http://localhost:3000"),n=Object.fromEntries(l.searchParams.entries()),a=n._serverFnId,f=n._serverFnName;if(!a||!f)throw new Error("Invalid request");R(typeof a=="string");const d=(i=await((r=z("server").chunks[a])==null?void 0:r.import()))==null?void 0:i[f],u=await(async()=>{try{const o=await(async()=>{var w;if((w=e.headers.get("Content-Type"))!=null&&w.includes("multipart/form-data"))return R(c.toLowerCase()!=="get","GET requests with FormData payloads are not supported"),await e.formData();if(c.toLowerCase()==="get")return n.payload?p.parse(n.payload):void 0;const L=await e.text();return p.parse(L)})(),s=await d(o);return s instanceof Response?s:m(s)&&"result"in s&&s.result instanceof Response?s.result:v(s)||_(s)?T(s):new Response(s!==void 0?p.stringify(s):void 0,{status:K(A()),headers:{"Content-Type":"application/json"}})}catch(o){return o instanceof Response?o:m(o)&&"result"in o&&o.result instanceof Response?o.result:v(o)||_(o)?T(o):(console.error("Server Fn Error!"),console.error(o),console.info(),new Response(p.stringify(o),{status:500,headers:{"Content-Type":"application/json"}}))}})();if(u.headers.get("Content-Type")==="application/json"){const s=await u.clone().text();s&&JSON.stringify(JSON.parse(s))}return u}function T(e){const{headers:t,...r}=e;return new Response(JSON.stringify(r),{status:200,headers:{"Content-Type":"application/json",...t||{}}})}export{k as default};
